.toastViewport {
  --viewport-padding: 25px;
  position: fixed;
  bottom: 0;
  right: 0;
  display: flex;
  flex-direction: column;
  padding: var(--viewport-padding);
  gap: 10px;
  width: 390px;
  max-width: 100vw;
  margin: 0;
  list-style: none;
  z-index: 2147483647;
  outline: none;
}

.toast {
  background-color: white;
  border-radius: 6px;
  box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.1);
  padding: 15px;
  display: grid;
  grid-template-areas: 'title action' 'description action';
  grid-template-columns: auto max-content;
  column-gap: 15px;
  align-items: center;
  border-left: 4px solid #000;
  
  &[data-state='open'] {
    animation: slideIn 150ms cubic-bezier(0.16, 1, 0.3, 1);
  }
  
  &[data-state='closed'] {
    animation: hide 100ms ease-in;
  }
  
  &[data-swipe='move'] {
    transform: translateX(var(--radix-toast-swipe-move-x));
  }
  
  &[data-swipe='cancel'] {
    transform: translateX(0);
    transition: transform 200ms ease-out;
  }
  
  &[data-swipe='end'] {
    animation: swipeOut 100ms ease-out;
  }
}

.toastTitle {
  grid-area: title;
  margin-bottom: 5px;
  font-weight: 600;
  color: #000;
  font-size: 16px;
}

.toastDescription {
  grid-area: description;
  margin: 0;
  color: #666;
  font-size: 14px;
  line-height: 1.5;
  display: flex;
  flex-direction: column;
  gap: 5px;
}

.highlightedText {
  display: block;
  margin-top: 8px;
  font-weight: 600;
  font-style: italic;
  color: #000;
}

.toastAction {
  grid-area: action;
}

.closeButton {
  all: unset;
  font-family: inherit;
  border-radius: 4px;
  height: 25px;
  width: 25px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  color: #888;
  position: absolute;
  top: 10px;
  right: 10px;
  transition: color 0.2s ease;
  
  &:hover {
    color: #000;
  }
  
  &:focus {
    box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.1);
  }
}

@keyframes hide {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes slideIn {
  from {
    transform: translateX(calc(100% + var(--viewport-padding)));
  }
  to {
    transform: translateX(0);
  }
}

@keyframes swipeOut {
  from {
    transform: translateX(var(--radix-toast-swipe-end-x));
  }
  to {
    transform: translateX(calc(100% + var(--viewport-padding)));
  }
}